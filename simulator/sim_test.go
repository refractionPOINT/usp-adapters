package usp_simulator

import "testing"

func TestSim(t *testing.T) {
	lines := []string{
		`{"event": {"@timestamp": 1662775559778, "_document_id": "wm8WeI2ULhRv8Exz-0mYYg==", "action": "git.push", "actor": "maximelb", "actor_location": {"country_code": "CA"}, "business": "refractionpoint", "business_id": 13212, "org": "refractionPOINT", "repo": "refractionPOINT/legion_config_hive", "repository": "refractionPOINT/legion_config_hive", "repository_public": false, "transport_protocol": 2, "transport_protocol_name": "ssh", "user": ""}, "routing": {"arch": 9, "did": "", "event_id": "195080d6-2c9a-48af-ac5a-b33bbb5a65d2", "event_time": 1662775559778, "event_type": "git.push", "ext_ip": "", "hostname": "maximelb", "iid": "ebda4de0-519c-44eb-913f-698a5a10c3af", "int_ip": "", "moduleid": 6, "oid": "8cbe27f4-bfa1-4afb-ba19-138cd51389cd", "plat": 134217728, "sid": "653409ad-afaf-46af-a58c-6b247331bf9f", "tags": ["audit", "cloud"], "this": "f50c16fcdf9e480889108d98631bf10d"}, "ts": "2022-09-10 02:05:59"}`,
		`{"event": {"@timestamp": 1662776529844, "_document_id": "_-5UP21Y_ssi5gmKdHdk3Q==", "action": "git.push", "actor": "maximelb", "actor_location": {"country_code": "CA"}, "business": "refractionpoint", "business_id": 13212, "org": "refractionPOINT", "repo": "refractionPOINT/legion_endpoint-go", "repository": "refractionPOINT/legion_endpoint-go", "repository_public": false, "transport_protocol": 2, "transport_protocol_name": "ssh", "user": ""}, "routing": {"arch": 9, "did": "", "event_id": "c0f3c9b9-bfff-432a-a161-21ae06380eed", "event_time": 1662775559788, "event_type": "git.push", "ext_ip": "", "hostname": "maximelb", "iid": "ebda4de0-519c-44eb-913f-698a5a10c3af", "int_ip": "", "moduleid": 6, "oid": "8cbe27f4-bfa1-4afb-ba19-138cd51389cd", "plat": 134217728, "sid": "653409ad-afaf-46af-a58c-6b247331bf9f", "tags": ["audit", "cloud"], "this": "ef14a01254534e57a18ed7aa631bf4d5"}, "ts": "2022-09-10 02:22:09"}`,
		`{"event": {"@timestamp": 1662825745253, "_document_id": "06X3-Zkiqf7Sp1lZrKD1OQ", "action": "pull_request_review.submit", "actor": "maximelb", "actor_location": {"country_code": "CA"}, "business": "refractionpoint", "business_id": 13212, "created_at": 1662825745253, "oauth_application_id": 1079828, "operation_type": "modify", "org": "refractionPOINT", "public_repo": false, "pull_request_id": 1051894821, "pull_request_title": "added analyst role to professions", "pull_request_url": "https://github.com/refractionPOINT/web-app-frontend/pull/1195", "repo": "refractionPOINT/web-app-frontend"}, "routing": {"arch": 9, "did": "", "event_id": "570e275f-7acb-4dfb-a285-d193f36bd66d", "event_time": 1662775559798, "event_type": "pull_request_review.submit", "ext_ip": "", "hostname": "maximelb", "iid": "ebda4de0-519c-44eb-913f-698a5a10c3af", "int_ip": "", "moduleid": 6, "oid": "8cbe27f4-bfa1-4afb-ba19-138cd51389cd", "plat": 134217728, "sid": "653409ad-afaf-46af-a58c-6b247331bf9f", "tags": ["audit", "cloud"], "this": "7fe910d3b19a49b68e46d37d631cb516"}, "ts": "2022-09-10 16:02:25"}`,
		`{"event": {"@timestamp": 1662840334232, "_document_id": "Jiv5nHsOZaVr1rhLcvS6DA==", "action": "git.push", "actor": "maximelb", "actor_location": {"country_code": "CA"}, "business": "refractionpoint", "business_id": 13212, "org": "refractionPOINT", "repo": "refractionPOINT/legion_usp_proxy", "repository": "refractionPOINT/legion_usp_proxy", "repository_public": false, "transport_protocol": 2, "transport_protocol_name": "ssh", "user": ""}, "routing": {"arch": 9, "did": "", "event_id": "b7c699d1-5f90-47f1-a546-9005027ac984", "event_time": 1662775559808, "event_type": "git.push", "ext_ip": "", "hostname": "maximelb", "iid": "ebda4de0-519c-44eb-913f-698a5a10c3af", "int_ip": "", "moduleid": 6, "oid": "8cbe27f4-bfa1-4afb-ba19-138cd51389cd", "plat": 134217728, "sid": "653409ad-afaf-46af-a58c-6b247331bf9f", "tags": ["audit", "cloud"], "this": "b5402c418b3845f1a241fab8631cee14"}, "ts": "2022-09-10 20:05:34"}`,
		`{"event": {"@timestamp": 1662840411381, "_document_id": "-G8LfdzLNaLQ9dB5nOT4Xw", "action": "pull_request.create_review_request", "actor": "maximelb", "actor_location": {"country_code": "CA"}, "business": "refractionpoint", "business_id": 13212, "created_at": 1662840411381, "operation_type": "create", "org": "refractionPOINT", "public_repo": false, "pull_request_id": 1052322434, "pull_request_title": "Make sure indxes are propagated to Endpoint.", "pull_request_url": "https://github.com/refractionPOINT/legion_usp_proxy/pull/200", "repo": "refractionPOINT/legion_usp_proxy", "user": "maximelb"}, "routing": {"arch": 9, "did": "", "event_id": "0577da60-ab09-4d05-8b0d-d8c32d0f0864", "event_time": 1662775559818, "event_type": "pull_request.create_review_request", "ext_ip": "", "hostname": "maximelb", "iid": "ebda4de0-519c-44eb-913f-698a5a10c3af", "int_ip": "", "moduleid": 6, "oid": "8cbe27f4-bfa1-4afb-ba19-138cd51389cd", "plat": 134217728, "sid": "653409ad-afaf-46af-a58c-6b247331bf9f", "tags": ["audit", "cloud"], "this": "87c067f7348a4e5b85e8cea1631cee5f"}, "ts": "2022-09-10 20:06:51"}`,
		`{"event": {"@timestamp": 1662840412074, "_document_id": "N5aTbEvAEncA815HODtNeg", "action": "pull_request.create", "actor": "maximelb", "actor_location": {"country_code": "CA"}, "business": "refractionpoint", "business_id": 13212, "created_at": 1662840412074, "operation_type": "create", "org": "refractionPOINT", "public_repo": false, "pull_request_id": 1052322434, "pull_request_title": "Make sure indxes are propagated to Endpoint.", "pull_request_url": "https://github.com/refractionPOINT/legion_usp_proxy/pull/200", "repo": "refractionPOINT/legion_usp_proxy", "user": "maximelb"}, "routing": {"arch": 9, "did": "", "event_id": "8fdc04ab-a414-4d4b-b9c0-85fd3e0f4a4f", "event_time": 1662775559828, "event_type": "pull_request.create", "ext_ip": "", "hostname": "maximelb", "iid": "ebda4de0-519c-44eb-913f-698a5a10c3af", "int_ip": "", "moduleid": 6, "oid": "8cbe27f4-bfa1-4afb-ba19-138cd51389cd", "plat": 134217728, "sid": "653409ad-afaf-46af-a58c-6b247331bf9f", "tags": ["audit", "cloud"], "this": "48fc05f210a046388d23ca71631cee65"}, "ts": "2022-09-10 20:06:52"}`,
	}

	a := SimulatorAdapter{}
	for _, l := range lines {
		if !a.replayTimedEvent([]byte(l)) {
			t.Errorf("event not replayed with right timing: %s", l)
		}
	}
}
