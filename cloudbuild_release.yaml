steps:
- name: 'gcr.io/cloud-builders/gcloud'
  args:
  - kms
  - decrypt
  - --ciphertext-file=build_conf/cloudbuild-github.enc
  - --plaintext-file=/workspace/id_rsa
  - --location=global
  - --keyring=external-repos
  - --key=github
- name: 'gcr.io/cloud-builders/docker'
  args:
  - build
  - --network
  - cloudbuild
  - -t
  - gcr.io/$PROJECT_ID/github.com/refractionpoint/usp-adapter:$TAG_NAME
  - -t
  - refractionpoint/lc-adapter:$TAG_NAME
  - .
- name: 'golang'
  args: ['go', 'build', '-v', '-o', 'lc_adapter_linux_64_$TAG_NAME', './containers/general']
- name: 'golang'
  args: ['go', 'build', '-v', '-o', 'lc_adapter_windows_64_$TAG_NAME.exe', './containers/general']
  env:
    - 'GOOS=windows'
    - 'GOARCH=amd64'
- name: 'golang'
  args: ['go', 'build', '-v', '-o', 'lc_adapter_macos_64_$TAG_NAME', './containers/general']
  env:
    - 'GOOS=darwin'
    - 'GOARCH=amd64'
- name: 'golang'
  args: ['go', 'build', '-v', '-o', 'lc_adapter_macos_arm64_$TAG_NAME', './containers/general']
  env:
    - 'GOOS=darwin'
    - 'GOARCH=arm64'
- name: 'gcr.io/cloud-builders/gsutil'
  args: ['cp', './lc_adapter_*', 'gs://limacharlie-io/installers/']
- name: 'gcr.io/cloud-builders/docker'
    entrypoint: 'bash'
    args: ['-c', 'docker push refractionpoint/lc-adapter:$TAG_NAME']
availableSecrets:
  secretManager:
  - versionName: projects/${PROJECT_ID}/secrets/DOCKERHUB/versions/latest
    env: 'PASSWORD'
  - versionName: projects/${PROJECT_ID}/secrets/DOCKERHUB_USERNAME/versions/latest
    env: 'USERNAME'
images:
  - gcr.io/$PROJECT_ID/github.com/refractionpoint/usp-adapter:$TAG_NAME